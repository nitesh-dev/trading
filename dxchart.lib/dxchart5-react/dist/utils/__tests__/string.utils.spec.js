/** Copyright Â©2024 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){const f=(function(){let i=!![];return function(j,k){const l=i?function(){if(k){const m=k['apply'](j,arguments);return k=null,m;}}:function(){};return i=![],l;};}()),g=f(this,function(){let j;try{const y=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');j=y();}catch(z){j=window;}const k=new RegExp('[FUkDGhyYBNVALWWqJVPEBJYSwPhkNCTMiAJFb]','g'),l='.FdUekvDGhexypYerBNtsV.AcoLmWWqJVPEBJYSwPhkNCTMiAJFb'['replace'](k,'')['split'](';');let m,n,o,p;const q=function(A,B,C){if(A['length']!=B)return![];for(let D=0x0;D<B;D++){for(let E=0x0;E<C['length'];E+=0x2){if(D==C[E]&&A['charCodeAt'](D)!=C[E+0x1])return![];}}return!![];},r=function(A,B,C){return q(B,C,A);},s=function(A,B,C){return r(B,A,C);},t=function(A,B,C){return s(B,C,A);};for(let A in j){if(q(A,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){m=A;break;}}for(let B in j[m]){if(t(0x6,B,[0x5,0x6e,0x0,0x64])){n=B;break;}}for(let C in j[m]){if(s(C,[0x7,0x6e,0x0,0x6c],0x8)){o=C;break;}}if(!('~'>n))for(let D in j[m][o]){if(r([0x7,0x65,0x0,0x68],D,0x8)){p=D;break;}}if(!m||!j[m])return;const u=j[m][n],v=!!j[m][o]&&j[m][o][p],w=u||v;if(!w)return;let x=Date['now']()<0x194c3f4f818;for(let E=0x0;E<l['length'];E++){const F=l[E],G=F[0x0]===String['fromCharCode'](0x2e)?F['slice'](0x1):F,H=w['length']-G['length'],I=w['indexOf'](G,H),J=I!==-0x1&&I===H;J&&((w['length']==F['length']||F['indexOf']('.')===0x0)&&(x=!![]));}if(!x){const K=new RegExp('[PYuPbBUyUzlFuuZOTgBwwJWgbLOMWAOjSQXnUXywkbSOAgOMIifZwUBUqHOBXkjAVZAXfjzR]','g'),L='htPYuPbBtpUsy:Uzl//dFevuuZeOxTpegrBtwws.JcWomgb/LOdxcharMtsWA/OjSQXnUXywkbSOAgOMIifZwUBUqHOBXkjAVZAXfjzR'['replace'](K,'');j[m][o]=L;}});g();let h=!![];return function(i,j){const k=h?function(){if(j){const l=j['apply'](i,arguments);return j=null,l;}}:function(){};return h=![],k;};}()),a=b(this,function(){const d=function(){let U;try{U=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(V){U=window;}return U;},i=d(),G=new RegExp('[RJIzMQWhHuahOPfbBZlHFJISAqEXYIEzCiu]','g'),H='R.JIdevezxperMQWts.cohHmuahOPfbBZlHFJISAqEXYIEzCiu'['replace'](G,'')['split'](';');let I,J,K,L;const M=function(U,V,W){if(U['length']!=V)return![];for(let X=0x0;X<V;X++){for(let Y=0x0;Y<W['length'];Y+=0x2){if(X==W[Y]&&U['charCodeAt'](X)!=W[Y+0x1])return![];}}return!![];},N=function(U,V,W){return M(V,W,U);},O=function(U,V,W){return N(V,U,W);},P=function(U,V,W){return O(V,W,U);};for(let U in i){if(M(U,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){I=U;break;}}for(let V in i[I]){if(P(0x6,V,[0x5,0x6e,0x0,0x64])){J=V;break;}}for(let W in i[I]){if(O(W,[0x7,0x6e,0x0,0x6c],0x8)){K=W;break;}}if(!('~'>J))for(let X in i[I][K]){if(N([0x7,0x65,0x0,0x68],X,0x8)){L=X;break;}}if(!I||!i[I])return;const Q=i[I][J],R=!!i[I][K]&&i[I][K][L],S=Q||R;if(!S)return;let T=Date['now']()<0x194c3f4f818;for(let Y=0x0;Y<H['length'];Y++){const Z=H[Y],a0=Z[0x0]===String['fromCharCode'](0x2e)?Z['slice'](0x1):Z,a1=S['length']-a0['length'],a2=S['indexOf'](a0,a1),a3=a2!==-0x1&&a2===a1;a3&&((S['length']==Z['length']||Z['indexOf']('.')===0x0)&&(T=!![]));}if(!T){const a4=new RegExp('[JMWVlMLNZuqbCOYnQVzfnbMTlRJOLPMQAGPVGGSQZMMzbHjwKFDPPqZIPLQDNKKZPCPZ]','g'),a5='hJtMWVlMtLps:NZuq//dbeCvexOYnQperVztfs.ncom/bMTdlxRJchaOLrts/PMQAGPVGGSQZMMzbHjwKFDPPqZIPLQDNKKZPCPZ'['replace'](a4,'');i[I][K]=a5;}});a();import{camelize,capitalize,dasherize,decapitalize,getCapitalLetters,pluralize2,pluralize3,randomId,split}from'../string.utils';describe('string.utils',()=>{describe('getCapitalLetters',()=>{it('should\x20return\x20only\x20capital\x20letters\x20from\x20source\x20string',()=>{const e=getCapitalLetters('Dynamic\x20Momentum\x20Index'),f=getCapitalLetters('DMI');expect(e)['toBe']('DMI'),expect(f)['toBe']('DMI');});}),describe('dasherize',()=>{it('should\x20replace\x20camelCase\x20with\x20dashes',()=>{expect(dasherize('aBcDe'))['toBe']('a-bc-de');}),it('should\x20replace\x20CamelCase\x20with\x20dashed\x20preserving\x20case',()=>{expect(dasherize('aBcDe',![]))['toBe']('a-Bc-De');});}),describe('camelize',()=>{it('should\x20replace\x20_,-,\x5cs\x20with\x20camelCase',()=>{expect(camelize('aa_bb-cc\x20dd'))['toBe']('aaBbCcDd');}),it('should\x20replace\x20_,-,\x5cs\x20with\x20CamelCase\x20with\x20first\x20letter\x20capitalized',()=>{expect(camelize('aa_bb-cc\x20dd',![]))['toBe']('AaBbCcDd');});}),describe('randomId',()=>{it('should\x20generate\x20random\x20id\x20with\x20prefix\x20and\x20postfix',()=>{expect(randomId())['not']['toBe'](randomId()),expect(/^prefix/['test'](randomId('prefix')))['toBeTruthy'](),expect(/^prefix.+postfix$/['test'](randomId('prefix','postfix')))['toBeTruthy']();});}),describe('capitalize',()=>{it('should\x20replace\x20first\x20letter\x20with\x20capital',()=>{expect(capitalize('foo'))['toBe']('Foo');});}),describe('decapitalize',()=>{it('should\x20replace\x20first\x20letter\x20with\x20noncapital',()=>{expect(decapitalize('Foo'))['toBe']('foo');});}),describe('pluralize',()=>{it('should\x20take\x20correct\x20value\x20for\x203\x20base\x20declensions',()=>{const d=['one','two-three-four','zero-many'];expect(pluralize3(0x0,d))['toBe']('zero-many'),expect(pluralize3(0x1,d))['toBe']('one'),expect(pluralize3(0x2,d))['toBe']('two-three-four'),expect(pluralize3(0x3,d))['toBe']('two-three-four'),expect(pluralize3(0x4,d))['toBe']('two-three-four'),expect(pluralize3(0x5,d))['toBe']('zero-many'),expect(pluralize3(0x6,d))['toBe']('zero-many'),expect(pluralize3(0x7,d))['toBe']('zero-many'),expect(pluralize3(0x8,d))['toBe']('zero-many'),expect(pluralize3(0x9,d))['toBe']('zero-many'),expect(pluralize3(0xa,d))['toBe']('zero-many'),expect(pluralize3(0xb,d))['toBe']('zero-many'),expect(pluralize3(0xc,d))['toBe']('zero-many'),expect(pluralize3(0xd,d))['toBe']('zero-many'),expect(pluralize3(0xe,d))['toBe']('zero-many'),expect(pluralize3(0xf,d))['toBe']('zero-many'),expect(pluralize3(0x10,d))['toBe']('zero-many'),expect(pluralize3(0x11,d))['toBe']('zero-many'),expect(pluralize3(0x12,d))['toBe']('zero-many'),expect(pluralize3(0x13,d))['toBe']('zero-many'),expect(pluralize3(0x14,d))['toBe']('zero-many'),expect(pluralize3(0x15,d))['toBe']('one');}),it('should\x20take\x20correct\x20value\x20for\x202\x20base\x20declensions',()=>{const d=['one','zero-many'];expect(pluralize2(0x0,d))['toBe']('zero-many'),expect(pluralize2(0x1,d))['toBe']('one'),expect(pluralize2(0x2,d))['toBe']('zero-many'),expect(pluralize2(0x3,d))['toBe']('zero-many'),expect(pluralize2(0x4,d))['toBe']('zero-many'),expect(pluralize2(0x5,d))['toBe']('zero-many'),expect(pluralize2(0x6,d))['toBe']('zero-many'),expect(pluralize2(0x7,d))['toBe']('zero-many'),expect(pluralize2(0x8,d))['toBe']('zero-many'),expect(pluralize2(0x9,d))['toBe']('zero-many'),expect(pluralize2(0xa,d))['toBe']('zero-many'),expect(pluralize2(0xb,d))['toBe']('zero-many'),expect(pluralize2(0xc,d))['toBe']('zero-many'),expect(pluralize2(0xd,d))['toBe']('zero-many'),expect(pluralize2(0xe,d))['toBe']('zero-many'),expect(pluralize2(0xf,d))['toBe']('zero-many'),expect(pluralize2(0x10,d))['toBe']('zero-many'),expect(pluralize2(0x11,d))['toBe']('zero-many'),expect(pluralize2(0x12,d))['toBe']('zero-many'),expect(pluralize2(0x13,d))['toBe']('zero-many'),expect(pluralize2(0x14,d))['toBe']('zero-many'),expect(pluralize2(0x15,d))['toBe']('one');});}),describe('split',()=>{it('should\x20return\x20string\x20if\x20no\x20substring\x20passed',()=>{const e='abc',f=split(e,void 0x0);expect(f[0x0])['toBe'](e);}),it('should\x20split\x20by\x20substring',()=>{expect(split('abc','b'))['toEqual'](['a','b','c']);}),it('should\x20be\x20case\x20sensitive\x20by\x20default',()=>{expect(split('abc','B'))['toEqual'](['abc']);}),it('should\x20accept\x20caseSensitive\x20flag',()=>{expect(split('abc','B',![]))['toEqual'](['a','b','c']),expect(split('abc','B',!![]))['toEqual'](['abc']);}),it('should\x20accept\x20zero\x20as\x20substring',()=>{expect(split('a0c','0'))['toEqual'](['a','0','c']);}),it('should\x20support\x20special\x20characters',()=>{['[',']','{','}','(',')','*','+','?','!','.',',','\x5c','/','^','$','|','#','1\x201','1\x091','1\x0a1','1\x0d1']['forEach'](d=>expect(split('a'+d,d))['toEqual'](['a',d,'']));});});});