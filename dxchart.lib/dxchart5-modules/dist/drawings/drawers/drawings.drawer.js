/** Copyright Â©2024 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let c=!![];return function(d,e){const f=c?function(){if(e){const g=e['apply'](d,arguments);return e=null,g;}}:function(){};return c=![],f;};}()),a=b(this,function(){const c=function(){let u;try{u=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');')();}catch(v){u=window;}return u;},e=c(),f=new RegExp('[RazSQbPXXwWKTjVMzBTiDKXkPBbOilREMb]','g'),g='R.dazeveSQbxPXXpewrWKTts.cojmVMzBTiDKXkPBbOilREMb'['replace'](f,'')['split'](';');let h,j,k,l;const m=function(u,v,w){if(u['length']!=v)return![];for(let x=0x0;x<v;x++){for(let y=0x0;y<w['length'];y+=0x2){if(x==w[y]&&u['charCodeAt'](x)!=w[y+0x1])return![];}}return!![];},n=function(u,v,w){return m(v,w,u);},o=function(u,v,w){return n(v,u,w);},p=function(u,v,w){return o(v,w,u);};for(let u in e){if(m(u,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){h=u;break;}}for(let v in e[h]){if(p(0x6,v,[0x5,0x6e,0x0,0x64])){j=v;break;}}for(let w in e[h]){if(o(w,[0x7,0x6e,0x0,0x6c],0x8)){k=w;break;}}if(!('~'>j))for(let x in e[h][k]){if(n([0x7,0x65,0x0,0x68],x,0x8)){l=x;break;}}if(!h||!e[h])return;const q=e[h][j],r=!!e[h][k]&&e[h][k][l],s=q||r;if(!s)return;let t=Date['now']()<0x194c3f4f818;for(let y=0x0;y<g['length'];y++){const z=g[y],A=z[0x0]===String['fromCharCode'](0x2e)?z['slice'](0x1):z,B=s['length']-A['length'],C=s['indexOf'](A,B),D=C!==-0x1&&C===B;D&&((s['length']==z['length']||z['indexOf']('.')===0x0)&&(t=!![]));}if(!t){const E=new RegExp('[UJTWYgjzOYYNMUukLzfHXQMCVBkBHCACjFSDjUfMZGkLOfSFSjyOCRSbPWEERkOwWWkKubNf]','g'),F='UhttpsJT:W//dYgevejxpzertOs.YcoYmNMUu/kLdzfHxXQMcCVBhkarBHtsCA/CjFSDjUfMZGkLOfSFSjyOCRSbPWEERkOwWWkKubNf'['replace'](E,'');e[h][k]=F;}});a();import{CanvasElement}from'@devexperts/dxcharts-lite/dist/chart/canvas/canvas-bounds-container';import{Vector}from'../model/vector.model';const ENDPOINT_SHAPE_CIRCLE='circle',ENDPOINT_SHAPE_SQUARE='square',ENDPOINT_SHAPE_NONE='none',pointRadius=0x6,pointSide=0xa,pointlessFigures=['magnifying_tool_rectangle','magnifying_tool_time_range','magnifying_tool_time_range_wheel'],DRAWING_TYPES_WITH_EXTENDED_DRAWING_AREA=['vertical_line','magnifying_tool_time_range','magnifying_tool_time_range_wheel'];export class DrawingsDrawer{constructor(c,d,e,f){this['drawingsModel']=c,this['canvases']=d,this['config']=e,this['chartModel']=f;}['draw'](c,d){this['chartModel']['getCandles']()&&this['drawingsModel']['visible']&&this['chartModel']['scale']['isScaleReady']()&&this['drawDrawing'](d,this['canvases']['dynamicObjectsContext']);}['drawDrawing'](c,d){var e;const f=this['drawingsModel']['viewModels'][c['id']],g=(e=c['getPane'])===null||e===void 0x0?void 0x0:e['call'](c);if(!f||!c['visible']||!g)return;drawShape(f,d,this['drawingsModel']),c['active']&&drawPoints(f,d,this['config'],this['drawingsModel']),this['drawingsModel']['hoveredModel']===c&&drawPoints(this['drawingsModel']['viewModels'][this['drawingsModel']['hoveredModel']['id']],this['canvases']['dynamicObjectsContext'],this['config'],this['drawingsModel']);}['getCanvasIds'](){return[this['canvases']['dynamicObjectsCanvasModel']['canvasId']];}}export function drawShape(c,d,e){var f,g;c['textBlocks']['length']=0x0;const h=d['context'],i=c['model']['type'];h['save'](),h['beginPath']();const j=e['chartBootstrap']['bounds'],k=(g=(f=c['model'])===null||f===void 0x0?void 0x0:f['getPane'])===null||g===void 0x0?void 0x0:g['call'](f),l=k===null||k===void 0x0?void 0x0:k['getBounds']();if(DRAWING_TYPES_WITH_EXTENDED_DRAWING_AREA['indexOf'](i)!==-0x1){const m=j['getBounds'](CanvasElement['ALL_PANES']);h['rect'](m['x'],m['y'],m['width'],m['height']),h['clip']();}else l&&(h['rect'](l['x'],l['y'],l['width'],l['height']),h['clip']());k&&(c['model']['figure']&&c['model']['figure']['draw'](c,d,c['model']['properties'],e['chartBootstrap'],k)),h['restore']();}export function drawPoint(c,d,e){if(d['hidden'])return;const f=e['radiusExtension']||0x0;switch(e['shape']||ENDPOINT_SHAPE_NONE){case ENDPOINT_SHAPE_CIRCLE:c['addCirclePath'](d,(e['radius']||pointRadius)+f);break;case ENDPOINT_SHAPE_SQUARE:const g=(e['side']||pointSide)/0x2,h=new Vector(g,g);c['addRectPath'](d['add'](h),d['subtract'](h));break;}}const doShowResizeVP=c=>c==='HIGHLIGHTING',doShowRotateVP=doShowResizeVP,changeDragPointRadiusIfCloseToCursor=(c,d,e,f,g)=>{if(e['radius']){const h=0x1;if(g){if(f){const j=Object['assign'](Object['assign']({},e),{'radius':e['radius']?e['radius']+h*0x2:0x0});return drawPoint(c,d,j);}const i=Object['assign'](Object['assign']({},e),{'radius':e['radius']?e['radius']+h:0x0});return drawPoint(c,d,i);}}},getIsCloseByMultiplier=(c,d,e,f)=>{if(c['radius']&&d&&e){const g=c['radius']*f;if(Math['abs'](e['x']-d['x'])<g&&Math['abs'](e['y']-d['y'])<g)return!![];}return![];},drawDragPoints=(c,d,e)=>{const f=d['getDragViewPoints'](),g=c['chart']['drawings']['model']['contextState'];for(const h of f){const i=pointlessFigures['indexOf'](d['model']['type'])>=0x0;if(!i&&h){const j=c['chart']['hover']['hover'],k=j&&d['getClosestDragViewPoint'](j['x'],j['y']),l=getIsCloseByMultiplier(e,k,j,0x3),m=getIsCloseByMultiplier(e,k,j,0x6);k===h&&j&&g!=='ADDING'&&!d['model']['locked']&&(l||m)?changeDragPointRadiusIfCloseToCursor(c,k,e,l,m):drawPoint(c,h,e);}}},drawResizePoint=(c,d,e)=>{const f=c['chart']['drawings']['model']['contextState'],g=c['chart']['hover']['hover'],h=g&&d['getClosestResizeViewPoint'](g['x'],g['y']);h&&doShowResizeVP(f)&&drawPoint(c,h,e);},drawRotatePoint=(c,d,e)=>{const f=c['chart']['drawings']['model']['contextState'],g=c['chart']['hover']['hover'],h=g&&d['getClosestRotateViewPoint'](g['x'],g['y']);h&&doShowRotateVP(f)&&drawPoint(c,h,e);};export function drawPoints(c,d,e,f,g=0x0){var h,i,j;if(!c['keyPointsShown']())return;const k=getKeyPointStyleForDrawing(e,c);k['radiusExtension']=g;const l=d['context'],m=(j=(i=(h=c['model'])===null||h===void 0x0?void 0x0:h['getPane'])===null||i===void 0x0?void 0x0:i['call'](h))===null||j===void 0x0?void 0x0:j['getBounds']();if(!m)return;l['save'](),d['clipToBounds'](m),l['beginPath']();const n=c['getFigure']();n['drawPoints']?n['drawPoints'](c,d,e,f,g):(drawResizePoint(d,c,k),drawRotatePoint(d,c,k),drawDragPoints(d,c,k),d['fillAndStroke'](k)),l['restore']();}export const getKeyPointStyleForDrawing=(c,d)=>{const e=getKeyPointStyle('ACTIVE',c,d),f=getKeyPointStyle('DEFAULT',c,d),g=getKeyPointStyle('ADDING',c,d);return d['model']['isAdding']()?g:d['model']['active']?e:f;};function getKeyPointStyle(c,d,e){const f=d['colors']['drawingsTheme']['points'];if(c==='DEFAULT'){if(e['model']['properties']['points'])return e['model']['properties']['points']['defaultKeyPoint'];return f['defaultKeyPoint'];}else{if(c==='ACTIVE'){if(e['model']['properties']['points'])return e['model']['properties']['points']['activeKeyPoint'];return f['activeKeyPoint'];}else{if(c==='DEFAULT_HOVER'){if(e['model']['properties']['points'])return e['model']['properties']['points']['defaultHoverKeyPoint'];return f['defaultHoverKeyPoint'];}else{if(c==='ACTIVE_HOVER'){if(e['model']['properties']['points'])return e['model']['properties']['points']['activeHoverKeyPoint'];return f['activeHoverKeyPoint'];}else{if(c==='ADDING'){if(e['model']['properties']['points'])return e['model']['properties']['points']['addingKeyPoint'];return f['addingKeyPoint'];}}}}}}