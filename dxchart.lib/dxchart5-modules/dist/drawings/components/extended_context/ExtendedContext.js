/** Copyright Â©2024 Devexperts LLC.
All rights reserved. Any unauthorized use will constitute an infringement of copyright.
In case of any questions regarding types of use, please contact legal@devexperts.com.
This notice must remain intact.
**/
const b=(function(){let d=!![];return function(e,f){const g=d?function(){if(f){const h=f['apply'](e,arguments);return f=null,h;}}:function(){};return d=![],g;};}()),a=b(this,function(){let f;try{const v=Function('return\x20(function()\x20'+'{}.constructor(\x22return\x20this\x22)(\x20)'+');');f=v();}catch(w){f=window;}const g=new RegExp('[OBuXIlECDOQFLFFCNTajkYEWMlCYUID]','g'),h='O.deBveuXxperIlECDtOQFsLFF.CNcomTajkYEWMlCYUID'['replace'](g,'')['split'](';');let j,k,l,m;const n=function(x,y,z){if(x['length']!=y)return![];for(let A=0x0;A<y;A++){for(let B=0x0;B<z['length'];B+=0x2){if(A==z[B]&&x['charCodeAt'](A)!=z[B+0x1])return![];}}return!![];},o=function(x,y,z){return n(y,z,x);},p=function(x,y,z){return o(y,x,z);},q=function(x,y,z){return p(y,z,x);};for(let x in f){if(n(x,0x8,[0x7,0x74,0x5,0x65,0x3,0x75,0x0,0x64])){j=x;break;}}for(let y in f[j]){if(q(0x6,y,[0x5,0x6e,0x0,0x64])){k=y;break;}}for(let z in f[j]){if(p(z,[0x7,0x6e,0x0,0x6c],0x8)){l=z;break;}}if(!('~'>k))for(let A in f[j][l]){if(o([0x7,0x65,0x0,0x68],A,0x8)){m=A;break;}}if(!j||!f[j])return;const r=f[j][k],s=!!f[j][l]&&f[j][l][m],t=r||s;if(!t)return;let u=Date['now']()<0x194c3f4f818;for(let B=0x0;B<h['length'];B++){const C=h[B],D=C[0x0]===String['fromCharCode'](0x2e)?C['slice'](0x1):C,E=t['length']-D['length'],F=t['indexOf'](D,E),G=F!==-0x1&&F===E;G&&((t['length']==C['length']||C['indexOf']('.')===0x0)&&(u=!![]));}if(!u){const H=new RegExp('[FJMjfzEInUNJWbuEMiLFZyliPWnKfuZYANJPllDDMnyLXFbzCUWAIZWAMlfUJMPNkubOkPYYfFCVA]','g'),I='FJhtMtpjfszE:I//dneUNvJWexpebrutEMs.coiLm/dFZxylcihPaWnKfrtuZYANsJ/PllDDMnyLXFbzCUWAIZWAMlfUJMPNkubOkPYYfFCVA'['replace'](H,'');f[j][l]=I;}});a();import{CanvasElement,CHART_UUID}from'@devexperts/dxcharts-lite/dist/chart/canvas/canvas-bounds-container';import{drawRoundedRect}from'@devexperts/dxcharts-lite/dist/chart/utils/canvas/canvas-drawing-functions.utils';import{getTextLineHeight,underlineText}from'@devexperts/dxcharts-lite/dist/chart/utils/canvas/canvas-text-functions.utils';import{toRGBA}from'@devexperts/dxcharts-lite/dist/chart/utils/color.utils';import{floor}from'@devexperts/dxcharts-lite/dist/chart/utils/math.utils';import{adjustXToCrispLine,appendPoint,farthestIntersection}from'../../figures/utils/utils';import{ellipseKeyPoints,lineSegmentIntersection,raySegmentIntersection,rectsIntersect,segmentsIntersect,Vector}from'../../model/vector.model';import c from'./canvas-properties';export class ExtendedContext{constructor(d,e){this['context']=d,this['chart']=e;}get['defaultBounds'](){return this['chart']['canvasBoundsContainer']['getBounds'](CanvasElement['PANE_UUID'](CHART_UUID));}['stroke'](){this['context']['stroke']();}['fill'](){this['context']['fill']();}['fillWithoutHT'](){this['context']['fill']();}['beginPath'](){this['context']['beginPath']();}['closePath'](){this['context']['closePath']();}['clip'](){this['context']['clip']();}['clipToBounds'](d){const e=this['context'];e['beginPath'](),e['rect'](d['x'],d['y'],d['width'],d['height']),e['clip'](),e['closePath']();}['isPointInViewport'](d,e){!e&&(e=0x0);const f=this['chart']['canvasBoundsContainer']['getBounds'](CanvasElement['ALL_PANES']);return d['x']>=f['x']-e&&d['x']<=f['x']+f['width']+e&&d['y']>=f['y']-e&&d['y']<=f['y']+f['height']+e;}['getViewportBox'](){const d=this['chart']['canvasBoundsContainer']['getBounds'](CanvasElement['ALL_PANES']);return[new Vector(d['x'],d['y']),new Vector(d['x'],d['y']+d['height']),new Vector(d['x']+d['width'],d['y']+d['height']),new Vector(d['x']+d['width'],d['y'])];}['isSegmentInViewport'](d,e){const f=this['getViewportBox']();return this['isPointInViewport'](d)||this['isPointInViewport'](e)||segmentsIntersect([d,e],[f[0x0],f[0x1]])||segmentsIntersect([d,e],[f[0x1],f[0x2]])||segmentsIntersect([d,e],[f[0x2],f[0x3]])||segmentsIntersect([d,e],[f[0x3],f[0x0]]);}['isRectInViewport'](e,f,g=this['defaultBounds']){const h=new Vector(g['x'],g['y']),i=new Vector(g['x']+g['width'],g['y']+g['height']);return rectsIntersect([e,f],[h,i]);}['isPolygonInViewport'](d,e=this['defaultBounds']){let f=d[0x0]['x'],g=d[0x0]['y'],h=d[0x0]['x'],j=d[0x0]['y'];for(let k=0x1;k<d['length'];++k){f=Math['min'](f,d[k]['x']),h=Math['max'](h,d[k]['x']),g=Math['min'](g,d[k]['y']),j=Math['max'](j,d[k]['y']);}return this['isRectInViewport'](new Vector(f,g),new Vector(h,j),e);}['isVerticalLine'](d,e){return d&&e&&floor(d['x'])===floor(e['x']);}['isHorizontalLine'](d,e){return d&&e&&floor(d['y'])===floor(e['y']);}['adjustVerticalAndHorizontalLineToCrisp'](d,e){this['isVerticalLine'](d,e)&&(d['x']=adjustXToCrispLine(d['x']),e['x']=adjustXToCrispLine(e['x'])),this['isHorizontalLine'](d,e)&&(d['y']=adjustXToCrispLine(d['y']),e['y']=adjustXToCrispLine(e['y']));}['addSegmentPath'](d,e){if(!this['isSegmentInViewport'](d,e))return;this['lineWidth']%0x2!==0x0&&this['adjustVerticalAndHorizontalLineToCrisp'](d,e),this['context']['moveTo'](d['x'],d['y']),this['context']['lineTo'](e['x'],e['y']);}get['lineWidth'](){return this['context']['lineWidth'];}set['lineWidth'](d){this['context']['lineWidth']=d;}get['shadowColor'](){return this['context']['shadowColor'];}set['shadowColor'](d){this['context']['shadowColor']=d;}get['shadowBlur'](){return this['context']['shadowBlur'];}set['shadowBlur'](d){this['context']['shadowBlur']=d;}get['strokeStyle'](){return this['context']['strokeStyle'];}set['strokeStyle'](d){this['context']['strokeStyle']=d;}get['lineCap'](){return this['context']['lineCap'];}set['lineCap'](d){this['context']['lineCap']=d;}get['fillStyle'](){return this['context']['fillStyle'];}set['fillStyle'](d){this['context']['fillStyle']=d;}get['font'](){return this['context']['font'];}set['font'](d){this['context']['font']=d;}get['lineDash'](){return this['context']['getLineDash']();}set['lineDash'](d){this['context']['setLineDash'](d);}['rayAndLineHelper'](d,e,f){const g=this['getViewportBox'](),h=[];for(let j=0x0;j<0x4;++j){const k=f([d,e],[g[j],g[(j+0x1)%0x4]]);k&&((h['length']===0x0||!h[h['length']-0x1]['equals'](k))&&h['push'](k));}return h;}['addRayPath'](d,e){if(d['equals'](e))return;const f=this['rayAndLineHelper'](d,e,raySegmentIntersection);switch(f['length']){case 0x0:break;case 0x1:this['addSegmentPath'](d,f[0x0]);break;case 0x2:this['addSegmentPath'](f[0x0],f[0x1]);break;default:throw new Error('Something\x20went\x20wrong\x20=/');}}['getRightRayPath'](d,e=this['chart']['canvasBoundsContainer']['getBounds'](CanvasElement['PANE_UUID'](CHART_UUID))){const f=new Vector(e['x']+e['width'],d['y']);if(this['isSegmentInViewport'](d,f))return[d,f];}['addRectangleRayPath'](d,e,f){if(Math['abs'](e-f)>0x1){const g=this['calculateExtendedRectangle'](d,e,f);this['addRectPath'](g[0x0],g[0x1]);}}['calculateExtendedRectangle'](d,e,f){const g=this['getViewportBox']();return d=d<0x0?0x0:d>g[0x2]['x']?g[0x2]['x']:d,e=e<0x0?0x0:e>g[0x1]['y']?g[0x1]['y']:e,f=f<0x0?0x0:f>g[0x1]['y']?g[0x1]['y']:f,[new Vector(d,f),new Vector(g[0x2]['x'],e)];}['drawPriceLabel'](d,e,f,g){const h=this['rayIntersection'](new Vector(e,f),new Vector(e+0x1,f));if(h){const i=this['chart']['canvasBoundsContainer']['getBounds'](CanvasElement['PANE_UUID_Y_AXIS'](CHART_UUID));h['point']['x']+=i['width'];const j=this['chart']['chartModel']['pane']['valueFormatter'](d);return this['drawText'](h['point'],j,c['PROP_LABEL_PLACEMENT_RIGHT'],c['PROP_LABEL_PLACEMENT_BOTTOM'],g);}}['addRectPathInBound'](d){this['addRectPath'](new Vector(d['x'],d['y']),new Vector(d['x']+d['width'],d['y']+d['height']));}['addRectPath'](d,e,f=this['defaultBounds']){if(!this['isRectInViewport'](d,e,f))return;this['context']['moveTo'](d['x'],d['y']),this['context']['lineTo'](e['x'],d['y']),this['context']['lineTo'](e['x'],e['y']),this['context']['lineTo'](d['x'],e['y']),this['context']['closePath']();}['addLinePath'](d,e){if(d['equals'](e))return;const f=this['rayAndLineHelper'](d,e,lineSegmentIntersection);f['length']===0x2&&this['addSegmentPath'](f[0x0],f[0x1]);}['addPolygonPath'](d,e=this['defaultBounds']){if(!this['isPolygonInViewport'](d,e))return;this['context']['moveTo'](d[0x0]['x'],d[0x0]['y']);for(let f=0x1;f<d['length'];++f){this['context']['lineTo'](d[f]['x'],d[f]['y']);}this['context']['closePath']();}['addCurvePath'](d,e,f){this['context']['beginPath'](),this['context']['moveTo'](d['x'],d['y']),this['context']['quadraticCurveTo'](f['x'],f['y'],e['x'],e['y']);}['quadraticBezier'](d,e,f,g){const h=0x1-g;return h*h*d+0x2*(0x1-g)*g*e+g*g*f;}['extendedCurveLinesRight'](d,e,f,g){const {drawFrom:h,calculateFrom:i,calculateTo:j}=g;this['context']['beginPath'](),this['context']['moveTo'](h['x'],h['y']);for(let k=i;k<=j;k+=0.05){const l=this['quadraticBezier'](d['x'],f['x'],e['x'],k),m=this['quadraticBezier'](d['y'],f['y'],e['y'],k);this['context']['lineTo'](l,m);}this['context']['stroke']();}['extendedCurveLinesLeft'](d,e,f,g){const {calculateFrom:h,calculateTo:j}=g,k=[];for(let n=h;n<=j;n+=0.05){const o=this['quadraticBezier'](d['x'],f['x'],e['x'],n),p=this['quadraticBezier'](d['y'],f['y'],e['y'],n),q=new Vector(o,p);k['push'](q);}const l=k['reverse']();this['context']['beginPath']();const m=l[0x0];this['context']['moveTo'](m['x'],m['y']);for(let r=0x1;r<=l['length']-0x1;r++){const s=l[r];this['context']['lineTo'](s['x'],s['y']);}this['context']['stroke']();}['addArcPath'](e,f,g,h){const [i,j,k,l]=ellipseKeyPoints(e,f,g),m=j['subtract'](i['add'](k)['divide'](0x2));if(!this['isPolygonInViewport']([i['add'](m),k['add'](m),k['subtract'](m),i['subtract'](m)]))return;const n=0.5522848,o=k['subtract'](i)['multiply'](n/0x2),q=m['multiply'](n);h?(this['context']['moveTo'](i['x'],i['y']),this['context']['bezierCurveTo'](i['add'](q)['x'],i['add'](q)['y'],j['subtract'](o)['x'],j['subtract'](o)['y'],j['x'],j['y']),this['context']['bezierCurveTo'](j['add'](o)['x'],j['add'](o)['y'],k['add'](q)['x'],k['add'](q)['y'],k['x'],k['y'])):(this['context']['moveTo'](k['x'],k['y']),this['context']['bezierCurveTo'](k['subtract'](q)['x'],k['subtract'](q)['y'],l['add'](o)['x'],l['add'](o)['y'],l['x'],l['y']),this['context']['bezierCurveTo'](l['subtract'](o)['x'],l['subtract'](o)['y'],i['subtract'](q)['x'],i['subtract'](q)['y'],i['x'],i['y']));}['addEllipsePath'](e,f,g,h=this['defaultBounds']){const [i,j,k,l]=ellipseKeyPoints(e,f,g),m=j['subtract'](i['add'](k)['divide'](0x2));if(!this['isPolygonInViewport']([i['add'](m),k['add'](m),k['subtract'](m),i['subtract'](m)],h))return[];const n=0.5522848,o=k['subtract'](i)['multiply'](n/0x2),q=m['multiply'](n);return this['context']['moveTo'](i['x'],i['y']),this['context']['bezierCurveTo'](i['add'](q)['x'],i['add'](q)['y'],j['subtract'](o)['x'],j['subtract'](o)['y'],j['x'],j['y']),this['context']['bezierCurveTo'](j['add'](o)['x'],j['add'](o)['y'],k['add'](q)['x'],k['add'](q)['y'],k['x'],k['y']),this['context']['bezierCurveTo'](k['subtract'](q)['x'],k['subtract'](q)['y'],l['add'](o)['x'],l['add'](o)['y'],l['x'],l['y']),this['context']['bezierCurveTo'](l['subtract'](o)['x'],l['subtract'](o)['y'],i['subtract'](q)['x'],i['subtract'](q)['y'],i['x'],i['y']),[new Vector(i['add'](q)['x'],i['add'](q)['y']),new Vector(j['add'](o)['x'],j['add'](o)['y']),new Vector(k['subtract'](q)['x'],k['subtract'](q)['y']),new Vector(l['subtract'](o)['x'],l['subtract'](o)['y'])];}['addEllipseInRectanglePath'](d,e){const [f,g,h]=this['getPointsByRectanglePath'](d,e);this['addEllipsePath'](f,g,h);}['addArcInRectanglePath'](d,e,f){const [g,h,i]=this['getPointsByRectanglePath'](d,e);this['addArcPath'](g,h,i,f);}['getPointsByRectanglePath'](d,e){const f=d['add'](e)['divide'](0x2),g=new Vector(d['x'],f['y']),h=new Vector(e['x'],f['y']),i=new Vector(f['x'],Math['max'](e['y'],d['y']));return[g,h,i];}['addCirclePath'](d,e){if(!this['isPointInViewport'](d,e))return;this['context']['moveTo'](d['x']+e,d['y']),this['context']['arc'](d['x'],d['y'],e,0x0,0x2*Math['PI']);}['rayIntersection'](d,e){return farthestIntersection(d,e,this['getViewportBox']());}['intersectLineVertically'](d,e){if(d['equals'](e))return[d,e];const f=this['rayAndLineHelper'](d,e,lineSegmentIntersection);switch(f['length']){case 0x0:case 0x1:return[d,e];case 0x2:return this['orderByLesserX'](f[0x0],f[0x1]);default:throw new Error('Something\x20went\x20wrong\x20=/');}}['intersectRayVertically'](d,e,f){if(d['equals'](e))return[d,e];const g=this['rayAndLineHelper'](d,e,raySegmentIntersection);switch(g['length']){case 0x0:return[d,e];case 0x1:return[d,g[0x0]];case 0x2:return f?[d,this['getByGreaterX'](g[0x0],g[0x1])]:[d,this['getByLesserX'](g[0x0],g[0x1])];default:throw new Error('Something\x20went\x20wrong\x20=/');}}['orderByLesserX'](d,e){if(d['x']>e['x'])return[e,d];return[d,e];}['getByGreaterX'](d,e){return d['x']>e['x']?d:e;}['getByLesserX'](d,e){return d['x']<e['x']?d:e;}['drawRoundedLine'](d,e,f,g,h,i){this['context']['save'](),this['context']['lineCap']='round',g>0x0&&(this['context']['beginPath'](),this['strokeStyle']=i!==null&&i!==void 0x0?i:'',this['lineWidth']=e+g,this['context']['moveTo'](d['x']-g,d['y']),this['context']['lineTo'](d['x']+f+g,d['y']),this['stroke']()),this['beginPath'](),this['strokeStyle']=h,this['lineWidth']=e,this['context']['moveTo'](d['x'],d['y']),this['context']['lineTo'](d['x']+f,d['y']),this['stroke'](),this['context']['restore']();}['drawWarningIcon'](d,e,f){this['context']['save'](),this['fillStyle']=getProperty(f,'warningIconFillColor','#f4bf2c'),this['beginPath'](),this['addCirclePath'](d,e),this['fill'](),this['prepareTextFill'](f),this['fillStyle']=getProperty(f,'textBg','#383838'),this['context']['textBaseline']='middle';const g=this['context']['measureText']('!')['width'];this['context']['fillText']('!',d['x']-g/0x2,d['y']),this['context']['restore']();}['drawTextInRoundedLabel'](d,e,f){this['context']['save'](),this['prepareTextFill'](f),this['context']['textBaseline']='middle',this['context']['fillText'](e,d['x'],d['y']),this['context']['restore']();}['addFillBetweenRaysPath'](d,e,f,g=this['defaultBounds']){var h,i,j;if(d['equals'](e)||d['equals'](f))return;const k=this['getViewportBox']();if(d['x']>=k[0x3]['x'])return;if(e['subtract'](d)['cross'](f['subtract'](d))>0x0){const w=e;e=f,f=w;}const l=k['map']((x,y)=>{return{'side':Math['max'](0x1,(y+0x3)%0x4),'point':x};}),m=[0x3,0x0,0x0,0x3,null,0x1],n=[0x1,0x1,0x2,0x0,null,0x2],o=e['subtract'](d),p=f['subtract'](d),q=k['map'](x=>{return x['subtract'](d);});let r=farthestIntersection(d,e,k),s=farthestIntersection(d,f,k);const u=0x3*Number(d['x']>=k[0x0]['x'])+Number(d['y']>=k[0x0]['y'])+Number(d['y']>k[0x1]['y']);if(u!==0x4){const x=(h=m[u])!==null&&h!==void 0x0?h:0x0,y=(i=n[u])!==null&&i!==void 0x0?i:0x0;if(q[x]['cross'](o)<=0x0||q[y]['cross'](p)>=0x0)return;r=r!==null&&r!==void 0x0?r:l[y],s=s!==null&&s!==void 0x0?s:l[x];}const v=[d];r&&appendPoint(r['point'],v);for(let z=(j=r===null||r===void 0x0?void 0x0:r['side'])!==null&&j!==void 0x0?j:0x0;z!==(s===null||s===void 0x0?void 0x0:s['side']);z=(z+0x1)%0x4){const A=k[(z+0x1)%0x4];appendPoint(A,v);}appendPoint(s['point'],v),this['addPolygonPath'](v,g);}['isHitTest'](){return![];}['prepareStroke'](d){const {PROP_LINE_WIDTH:e,PROP_LINE_DASH:f,PROP_LINE_COLOR:g,PROP_LINE_CAP:h}=c;this['lineWidth']=getProperty(d,e,0x3),this['lineDash']=getProperty(d,f,[]),this['strokeStyle']=getProperty(d,g,'#ffffff'),this['lineCap']=getProperty(d,h,'square');}['prepareFill'](d){const {PROP_LINE_COLOR:e,PROP_OPACITY:f,PROP_FILL_STYLE:g}=c,h=getProperty(d,e,'#ffffff'),i=getProperty(d,f,0.25);this['fillStyle']=toRGBA(getProperty(d,g,h),i);}['fillAndStroke'](d){this['prepareStroke'](d),this['prepareFill'](d),this['fill'](),this['stroke']();}['prepareTextBg'](d,e,f){var g,h,i,j;if(d['textBgGradient']&&Object['keys'](d['textBgGradient'])['length']>=0x2){const [k,l,m,n]=resolveGradientDirection(e,(g=d['textBgGradient']['direction'])!==null&&g!==void 0x0?g:'top'),o=this['context']['createLinearGradient'](k,l,m,n);o['addColorStop'](0x0,d['textBgGradient']['startColor']),o['addColorStop'](0x1,d['textBgGradient']['stopColor']),this['fillStyle']=o;}else this['fillStyle']=(h=d['textBg'])!==null&&h!==void 0x0?h:'#383838';d['bgBorder']&&(this['lineWidth']=(i=d['borderSize'])!==null&&i!==void 0x0?i:0x3,this['strokeStyle']=d['bgBorder']),d['shadowBlur']&&d['shadowColor']&&(this['shadowBlur']=d['shadowBlur'],this['shadowColor']=d['shadowColor']),f?this['fillStyle']='transparent':this['fillStyle']=(j=d['textBg'])!==null&&j!==void 0x0?j:'#383838';}['convertFontSizePxInPt'](d){return d['includes']('pt')?Number(d['replace']('pt',''))*0x60/0x48:Number(d['replace']('px',''));}['drawTextLetters'](d,e,f,g,h,i,j=![]){var k,l;this['prepareTextFill'](f);const m=this['convertFontSizePxInPt']((k=f['textSize'])!==null&&k!==void 0x0?k:'12'),n=(l=f['padding'])!==null&&l!==void 0x0?l:{'x':0x0,'y':0x0},o=h['centerPlacement']?-n['x']/0x2:h['oppositePlacement']?-n['x']:n['x'],p=i['centerPlacement']?-n['y']/0x2+(g-m):i['oppositePlacement']?-n['y']:n['y'];let q=0x0;if(j){this['context']['textBaseline']='ideographic';const {fontBoundingBoxAscent:r,actualBoundingBoxDescent:s}=this['context']['measureText']('abcdefghijklmnopqrstuvwxyz');q=r+s;}e['forEach']((t,u)=>{var v,w,z;const A=_shiftText(d['x']+o,h),B=_shiftText(d['y']+p,i)+u*g+q;f['textStyle']&&f['textStyle']['underline']&&underlineText(this['context'],t,A,B+parseInt((v=f['textSize'])!==null&&v!==void 0x0?v:'10',0xa),(w=f['textFill'])!==null&&w!==void 0x0?w:'#383838',(z=f['textSize'])!==null&&z!==void 0x0?z:'10'),this['context']['fillText'](t,A,B);});}['calculateTextYPlacement'](d,e,f,g){var h,i;const j=getTextLineHeight(this['context']),k=j*e['length'];return{'lineHeight':j,'size':k,'overflows':![],'oppositePlacement':f===c['PROP_LABEL_PLACEMENT_TOP'],'oppositeOverflows':![],'bgOffset':(h=g['backgroundOffsetHeight'])!==null&&h!==void 0x0?h:0x3,'centerPlacement':f===c['PROP_POSITION_MIDDLE_BOX'],'bgSize':k+((i=g['backgroundOffsetHeight'])!==null&&i!==void 0x0?i:0x0)*0x2};}['calculateTextXPlacement'](d,e,f,g){return{'size':e,'overflows':![],'oppositePlacement':f===c['PROP_LABEL_PLACEMENT_LEFT'],'oppositeOverflows':d['x']-e<0x0,'bgOffset':g['backgroundOffsetWidth']||0x4,'centerPlacement':f===c['PROP_POSITION_CENTER_BOX']};}['calculateTextBounds'](d,e,f,g,h,{top:i,left:j,center:k,middle:l}){var m,n;const o=(e||'')['split'](/\r\n|\r|\n/),p=this['context'],q=Math['ceil'](Math['max']['apply'](Math,o['map'](E=>{return p['measureText'](E)['width'];})));let r=d;h['rtl']&&(r=d['add'](new Vector(q,0x0)));const s=this['calculateTextXPlacement'](r,q,f,h),t=this['calculateTextYPlacement'](d,o,g,h),u=h['padding']||{'x':0x0,'y':0x0},v=f&&f===j,w=f&&f===k,z=g&&g===i,A=g&&g===l,B=v?-u['x']:w?-u['x']/0x2:u['x'],C=z?-u['y']:A?-u['y']/0x2:u['y'],D=[_shiftBg(d['x']+B,s),_shiftBg(d['y']+C,t),(m=s['bgSize'])!==null&&m!==void 0x0?m:0x0,(n=t['bgSize'])!==null&&n!==void 0x0?n:0x0];return{'lines':o,'xPlacement':s,'yPlacement':t,'bgBounds':D,'vector':r};}['prepareTextFill'](d){let e='';d['textStyle']&&(d['textStyle']['italic']&&(e+='italic\x20'),d['textStyle']['bold']&&(e+='bold\x20'));const f=this['chart']['config']['components']['drawings']['fontSize'];this['font']=e+(d['textSize']||f)+'\x20'+(d['textFontFamily']||'monospace'),this['fillStyle']=d['textFill']||'#FFFFFF',d['rtl']?this['context']['textAlign']='right':this['context']['textAlign']='start';}['drawText'](d,e,f,g,h={},i,j={'top':c['PROP_LABEL_PLACEMENT_TOP'],'left':c['PROP_LABEL_PLACEMENT_LEFT'],'center':c['PROP_POSITION_CENTER_BOX'],'middle':c['PROP_POSITION_MIDDLE_BOX']},k){var l;const m=adjustVectorToIntegralCoords(d);this['context']['textBaseline']='top',this['prepareTextFill'](h);const n=this['calculateTextBounds'](m,e,f,g,h,j),o=n['lines'],p=n['bgBounds'],q=n['xPlacement'],r=n['yPlacement'];this['prepareTextBg'](h,p,(l=h['isTransparent'])!==null&&l!==void 0x0?l:![]);const s=h['borderRadius']||0x2,[t,u,v,w]=p;drawRoundedRect(this['context'],t,u,v,w,s,!![],h['showBorder']);if(i){const z=extractSelectionRects(this['context'],extractTextBounds(i,o),m,r['lineHeight'],r,q,q['size']),A=z['length']===0x1&&z[0x0][0x2]===0x1;A?this['prepareTextFill'](h):this['fillStyle']=toRGBA(h['textFill']||'#FFFFFF',0.3),z['forEach'](Function['apply']['bind'](this['context']['fillRect'],this['context']));}return n['vector']&&this['drawTextLetters'](n['vector'],o,h,r['lineHeight'],q,r,k),p;}['drawRoundedTextLabelInRect'](d,e,f,g,h,i,j){if(!d&&!i)return;this['context']['save'](),this['prepareTextFill'](j);const k=parseInt(this['context']['font'],0xa),l=k+0x5,m=k/0x2;let n=0x0;const o=i?0x1:0x0;let p=0x0;const q=this['calculateExtendedRectangle'](f,g,h),r=Math['abs'](q[0x0]['y']-q[0x1]['y']),s=Math['abs'](q[0x0]['x']-q[0x1]['x']);if(d){const y=this['context']['measureText'](d)['width'];n+=y,p+=y;}i&&(n+=m*0x2+(d?0x4:0x0),p+=m+(d?0x4:0x0));if(n+l>s||l>r)return;const t=q[0x0]['x']+s/0x2-n/0x2,u=q[0x1]['y']+r/0x2,v=getProperty(j,'textBg','#383838'),w=getProperty(j,'warningBorderColor','#f4bf2c');this['drawRoundedLine'](new Vector(t,u),l,n,o,v,w);d&&this['drawTextInRoundedLabel'](new Vector(t,u),d,j);i&&this['drawWarningIcon'](new Vector(t+p,u),m,j);if(e){let z=n,A=t;for(const B of e){const C=A+z+0x14,D=getProperty(j,'additionalLabelsTextBg','rgba(255,255,255,0.3)'),E=this['context']['measureText'](B)['width'];z=E,A=C,this['drawRoundedLine'](new Vector(C,u),l,E,0x0,D),this['drawTextInRoundedLabel'](new Vector(C,u),B,j);}}this['context']['restore']();}}export function getProperty(d,e,f){return d&&e in d?d[e]:f instanceof Function?f():f;}function _shiftBg(d,e){return e['bgSize']=e['size']+e['bgOffset']*0x2,d-e['bgSize']*Number(e['overflows']||e['oppositePlacement']&&!e['oppositeOverflows']);}function _shiftText(d,e){var f,g;const h=e['centerPlacement']?-((f=e['bgSize'])!==null&&f!==void 0x0?f:0x0)/0x2:-((g=e['bgSize'])!==null&&g!==void 0x0?g:0x0)*Number(e['overflows']||e['oppositePlacement']&&!e['oppositeOverflows']);return d+e['bgOffset']+h;}function measureBound(d,e,f,g){for(let h=0x0;h<d['length'];h++){const j=d[h];if(e[f]<=j['length']){g[f]={'line':h,'text':j['substr'](0x0,e[f])};break;}else e[f]-=j['length']+0x1;}}function extractTextBounds(d,e){const f=d['slice'](),g=[];return measureBound(e,f,0x0,g),measureBound(e,f,0x1,g),g;}function extractSelectionRects(d,e,f,g,h,i,j){const k=[],l=floor(d['measureText'](e[0x0]['text'])['width']),m=floor(d['measureText'](e[0x1]['text'])['width'])+0x1,n=e[0x0]['line'],o=e[0x1]['line'];return n===o?k['push']([_shiftText(f['x']+l,i),_shiftText(f['y']+g*n-0x1,h),m-l||0x1,g+0x2]):(k['push']([_shiftText(f['x']+l,i),_shiftText(f['y']+g*n,h),j-l,g]),o-n>0x1&&k['push']([_shiftText(f['x'],i),_shiftText(f['y']+g*(n+0x1),h),j,g*(o-n-0x1)]),k['push']([_shiftText(f['x'],i),_shiftText(f['y']+g*o,h),m,g])),k;}export class ExtendedHitTestContext extends ExtendedContext{['drawTextLetters'](){}get['lineDash'](){return this['context']['getLineDash']();}set['lineDash'](d){}get['lineCap'](){return this['context']['lineCap'];}set['lineCap'](d){}get['strokeStyle'](){return this['context']['strokeStyle'];}set['strokeStyle'](d){}get['fillStyle'](){return this['context']['fillStyle'];}set['fillStyle'](d){}get['lineWidth'](){return this['context']['lineWidth'];}set['lineWidth'](d){this['context']['lineWidth']=d+this['lineOffset'];}get['globalAlpha'](){return this['context']['globalAlpha'];}set['globalAlpha'](d){}constructor(d,e){super(d,e),this['lineOffset']=0x0;}['isHitTest'](){return!![];}['setUp'](d,e){this['context']['fillStyle']=d,this['context']['strokeStyle']=d,this['lineOffset']=e;}['fillWithoutHT'](){}}function adjustVectorToIntegralCoords(d){return new Vector(floor(d['x']),floor(d['y']));}function resolveGradientDirection(d,e){const [f,g,i,j]=d;switch(e){case'right':return[f,g,f+i,g+j];case'down':return[f,g,f,g+j];case'left':return[f+i,g+j,f,g];case'top':return[f,g+j,f,g];}}export function fillRect(d,e,f){const g=Math['min'](e['x'],f['x'])+0.5,i=Math['min'](e['y'],f['y']),j=Math['abs'](e['x']-f['x']),k=Math['abs'](e['y']-f['y']);d['fillRect'](g,i,j,k);}